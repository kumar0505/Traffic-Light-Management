<?xml version="1.0" encoding="ISO-8859-1"?>
<!--$********** SCADE Suite KCG 32-bit 6.6 (build i19) ***********
** Command: kcg66.exe -config D:/TrafficLightManagement/KCG/config.txt
** Generation date: 2020-06-09T12:45:14
*************************************************************$-->
<mapping>
  <config>
    <option name="use_types" value="#off#"/>
    <option name="imported_root_package" value="#off#"/>
    <option name="root_package" value="#off#"/>
    <option name="xml_basename" value="kcg_xml_filter_out.scade"/>
    <option name="state_vector" value="#off#"/>
    <option name="static" value="#off#"/>
    <option name="separate_io_all" value="#off#"/>
    <option name="no_separate_io" value="#off#"/>
    <option name="separate_io" value="#off#"/>
    <option name="warn_error" value="#off#"/>
    <option name="short_circuit" value="#off#"/>
    <option name="wrap_c_ops" value="#off#"/>
    <option name="input_file" value="D:/TrafficLightManagement/KCG/scade_model_without_unused.scade"/>
    <option name="probes" value="#off#"/>
    <option name="debug" value="#off#"/>
    <option name="no_observe" value="#off#"/>
    <option name="observe" value="#off#"/>
    <option name="user_config" value="./user_macros.h"/>
    <option name="input_threshold" value="#off#"/>
    <option name="header" value="#off#"/>
    <option name="significance_length" value="31"/>
    <option name="name_length" value="200"/>
    <option name="globals_prefix" value="#off#"/>
    <option name="keep_asserts" value="#off#"/>
    <option name="global_root_context" value="#off#"/>
    <option name="expall" value="#off#"/>
    <option name="noexp" value="#off#"/>
    <option name="exp" value="#off#"/>
    <option name="target_dir" value="D:/TrafficLightManagement/KCG"/>
    <option name="target" value="C"/>
    <option name="root" value="TrafficLightController::ModeTransition"/>
    <option name="auth" value="#off#"/>
  </config>
  <model>
    <predefType id="1" name="bool"/>
    <predefType id="2" name="char"/>
    <predefType id="3" name="int8"/>
    <predefType id="4" name="int16"/>
    <predefType id="5" name="int32"/>
    <predefType id="6" name="int64"/>
    <predefType id="7" name="uint8"/>
    <predefType id="8" name="uint16"/>
    <predefType id="9" name="uint32"/>
    <predefType id="10" name="uint64"/>
    <predefType id="11" name="float32"/>
    <predefType id="12" name="float64"/>
    <predefType id="13" name="size"/>
    <package id="14" name="TrafficLightController">
      <enum id="15" name="TRAFFIC_MODE_Type">
        <value id="16" name="AUTOMATIC_MODE" default="false"/>
        <value id="17" name="MANUAL_MODE" default="false"/>
      </enum>
      <operator id="18" name="ModeTransition" imported="false" root="true" expanded="false">
        <input id="19" name="AutoMode" clock="false" type="1"/>
        <input id="20" name="ManualMode" clock="false" type="1"/>
        <output id="21" name="MODE" clock="false" type="15"/>
        <automaton id="22" name="ModeTransition">
          <state id="23" name="AutomaticMode" initial="true" final="false" default="false">
            <fork id="24" name="1" kind="strong">
              <transition id="25" dest="26"/>
            </fork>
          </state>
          <state id="26" name="ManualMode" initial="false" final="false" default="false">
            <fork id="27" name="1" kind="strong">
              <transition id="28" dest="23"/>
            </fork>
          </state>
        </automaton>
      </operator>
    </package>
  </model>
  <generated>
    <c>
      <file id="29" name="ModeTransition_TrafficLightController.h">
        <function id="30" name="ModeTransition_init_TrafficLightController">
          <parameter id="31" name="outC" type="37" pointer="true"/>
        </function>
        <function id="32" name="ModeTransition_reset_TrafficLightController">
          <parameter id="33" name="outC" type="37" pointer="true"/>
        </function>
        <function id="34" name="ModeTransition_TrafficLightController">
          <parameter id="35" name="inC" type="40" pointer="true"/>
          <parameter id="36" name="outC" type="37" pointer="true"/>
        </function>
        <struct id="37" name="outC_ModeTransition_TrafficLightController">
          <field id="38" name="MODE" type="51" pointer="false"/>
          <field id="39" name="ModeTransition_state_nxt" type="44" pointer="false"/>
        </struct>
        <struct id="40" name="inC_ModeTransition_TrafficLightController">
          <field id="41" name="AutoMode" type="88" pointer="false"/>
          <field id="42" name="ManualMode" type="88" pointer="false"/>
        </struct>
      </file>
      <file id="43" name="kcg_types.h">
        <enum id="44" name="SSM_ST_ModeTransition" tagName="kcg_tag_SSM_ST_ModeTransition">
          <value id="45" name="SSM_st_AutomaticMode_ModeTransition"/>
          <value id="46" name="SSM_st_ManualMode_ModeTransition"/>
        </enum>
        <enum id="47" name="SSM_TR_ModeTransition" tagName="kcg_tag_SSM_TR_ModeTransition">
          <value id="48" name="SSM_TR_no_trans_ModeTransition"/>
          <value id="49" name="SSM_TR_AutomaticMode_ManualMode_1_AutomaticMode_ModeTransition"/>
          <value id="50" name="SSM_TR_ManualMode_AutomaticMode_1_ManualMode_ModeTransition"/>
        </enum>
        <enum id="51" name="TRAFFIC_MODE_Type_TrafficLightController"
            tagName="kcg_tag_TRAFFIC_MODE_Type_TrafficLightController">
          <value id="52" name="AUTOMATIC_MODE_TrafficLightController"/>
          <value id="53" name="MANUAL_MODE_TrafficLightController"/>
        </enum>
        <macro id="54" name="kcg_assign_array"/>
        <macro id="55" name="kcg_assign_struct"/>
        <macro id="56" name="kcg_lnot_uint8"/>
        <macro id="57" name="kcg_lnot_uint16"/>
        <macro id="58" name="kcg_lnot_uint32"/>
        <macro id="59" name="kcg_lnot_uint64"/>
        <macro id="60" name="kcg_lsl_uint8"/>
        <macro id="61" name="kcg_lsl_uint16"/>
        <macro id="62" name="kcg_lsl_uint32"/>
        <macro id="63" name="kcg_lsl_uint64"/>
        <macro id="64" name="kcg_true"/>
        <macro id="65" name="kcg_false"/>
        <macro id="66" name="kcg_lit_int8"/>
        <macro id="67" name="kcg_lit_int16"/>
        <macro id="68" name="kcg_lit_int32"/>
        <macro id="69" name="kcg_lit_int64"/>
        <macro id="70" name="kcg_lit_uint8"/>
        <macro id="71" name="kcg_lit_uint16"/>
        <macro id="72" name="kcg_lit_uint32"/>
        <macro id="73" name="kcg_lit_uint64"/>
        <macro id="74" name="kcg_lit_size"/>
        <macro id="75" name="kcg_lit_float64"/>
        <macro id="76" name="kcg_lit_float32"/>
        <predefType id="77" name="kcg_int8"/>
        <predefType id="78" name="kcg_int16"/>
        <predefType id="79" name="kcg_int32"/>
        <predefType id="80" name="kcg_int64"/>
        <predefType id="81" name="kcg_uint8"/>
        <predefType id="82" name="kcg_uint16"/>
        <predefType id="83" name="kcg_uint32"/>
        <predefType id="84" name="kcg_uint64"/>
        <predefType id="85" name="kcg_size"/>
        <predefType id="86" name="kcg_float64"/>
        <predefType id="87" name="kcg_float32"/>
        <predefType id="88" name="kcg_bool"/>
        <predefType id="89" name="kcg_char"/>
        <macro id="90" name="KCG_MAPW_CPY"/>
      </file>
      <file id="91" name="kcg_consts.h"/>
      <file id="92" name="kcg_sensors.h"/>
    </c>
    <map srcId="86" dstId="75" role="wrapped-lit"/>
    <map srcId="87" dstId="76" role="wrapped-lit"/>
    <map srcId="85" dstId="74" role="wrapped-lit"/>
    <map srcId="84" dstId="73" role="wrapped-lit"/>
    <map srcId="84" dstId="59" role="wrapped-lnot"/>
    <map srcId="84" dstId="63" role="wrapped-lsl"/>
    <map srcId="83" dstId="72" role="wrapped-lit"/>
    <map srcId="83" dstId="58" role="wrapped-lnot"/>
    <map srcId="83" dstId="62" role="wrapped-lsl"/>
    <map srcId="82" dstId="71" role="wrapped-lit"/>
    <map srcId="82" dstId="57" role="wrapped-lnot"/>
    <map srcId="82" dstId="61" role="wrapped-lsl"/>
    <map srcId="81" dstId="70" role="wrapped-lit"/>
    <map srcId="81" dstId="56" role="wrapped-lnot"/>
    <map srcId="81" dstId="60" role="wrapped-lsl"/>
    <map srcId="80" dstId="69" role="wrapped-lit"/>
    <map srcId="79" dstId="68" role="wrapped-lit"/>
    <map srcId="78" dstId="67" role="wrapped-lit"/>
    <map srcId="77" dstId="66" role="wrapped-lit"/>
  </generated>
  <map modelId="28" generatedId="50"/>
  <map modelId="25" generatedId="49"/>
  <map modelId="22" generatedId="48" role="autom-no-trans-enum"/>
  <map modelId="16" generatedId="52"/>
  <map modelId="17" generatedId="53"/>
  <map modelId="26" generatedId="46"/>
  <map modelId="23" generatedId="45"/>
  <map modelId="18" generatedId="31" role="context-parameter"/>
  <map modelId="18" generatedId="30" role="init-method"/>
  <map modelId="18" generatedId="33" role="context-parameter"/>
  <map modelId="18" generatedId="32" role="reset-method"/>
  <map modelId="18" generatedId="35" role="input-struct-parameter"/>
  <map modelId="20" generatedId="42"/>
  <map modelId="19" generatedId="41"/>
  <map modelId="18" generatedId="40" role="input-struct-type"/>
  <map modelId="18" generatedId="36" role="context-parameter"/>
  <map modelId="22" generatedId="39" role="autom-next-state"/>
  <map modelId="21" generatedId="38"/>
  <map modelId="18" generatedId="37" role="context-type"/>
  <map modelId="18" generatedId="29" role="interface-file"/>
  <map modelId="18" generatedId="34" role="cycle-method"/>
  <map modelId="15" generatedId="51"/>
  <map modelId="22" generatedId="47" role="autom-transitions-type"/>
  <map modelId="22" generatedId="44" role="autom-states-type"/>
  <map modelId="2" generatedId="89"/>
  <map modelId="1" generatedId="88"/>
  <map modelId="12" generatedId="86"/>
  <map modelId="11" generatedId="87"/>
  <map modelId="13" generatedId="85"/>
  <map modelId="10" generatedId="84"/>
  <map modelId="9" generatedId="83"/>
  <map modelId="8" generatedId="82"/>
  <map modelId="7" generatedId="81"/>
  <map modelId="6" generatedId="80"/>
  <map modelId="5" generatedId="79"/>
  <map modelId="4" generatedId="78"/>
  <map modelId="3" generatedId="77"/>
</mapping>
<!--$********** SCADE Suite KCG 32-bit 6.6 (build i19) ***********
** mapping.xml
** Generation date: 2020-06-09T12:45:14
*************************************************************$-->